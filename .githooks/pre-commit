#!/bin/bash

# ktlint pre-commit hook
echo "Running ktlint formatting..."

# Get project root
ROOT_DIR=$(git rev-parse --show-toplevel)
cd "$ROOT_DIR" || exit 1

# Check if ktlint is available
if ! command -v ktlint &> /dev/null && ! ./gradlew ktlint --help &> /dev/null; then
    echo "Error: ktlint not found. Please install ktlint or add it to your Gradle project."
    exit 1
fi

# Get list of staged Kotlin files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep '\.kt[s"]\?$' || true)

if [ -z "$STAGED_FILES" ]; then
    echo "No staged Kotlin files found. Skipping ktlint formatting."
    exit 0
fi

echo "Formatting ${#STAGED_FILES[@]} Kotlin file(s)..."

# Format files
if command -v ktlint &> /dev/null; then
    echo "$STAGED_FILES" | xargs ktlint -F
else
    echo "$STAGED_FILES" | xargs ./gradlew ktlintFormat -q
fi

# Add formatted files back to staging
CHANGED_FILES=$(git diff --name-only --diff-filter=ACMR | grep '\.kt[s"]\?$' || true)
if [ -n "$CHANGED_FILES" ]; then
    echo "The following files were reformatted:"
    echo "$CHANGED_FILES"
    echo "$CHANGED_FILES" | xargs git add
    echo "Reformatted files have been added to staging."
fi

echo "ktlint formatting completed!"

# ktlintCheck pre-commit hook - checks code style without formatting
echo "Running ktlint check..."

echo "Checking ${#STAGED_FILES[@]} Kotlin file(s) for code style violations..."

# Check if ktlint is available
if ! ./gradlew tasks --all | grep -q "ktlintCheck"; then
    echo "❌ Error: ktlintCheck task not found."
    echo "Please add ktlint to your Gradle project:"
    echo "plugins { id(\"org.jlleitschuh.gradle.ktlint\") version \"11.6.1\" }"
    exit 1
fi

# Create temporary file with staged files
TEMP_FILE_LIST=$(mktemp)
echo "$STAGED_FILES" > "$TEMP_FILE_LIST"

# Run ktlint check on staged files
echo "Running ktlint check on staged files..."
if ./gradlew ktlintCheck -Pktlint.fileList="$TEMP_FILE_LIST" --quiet; then
    echo "✓ All Kotlin files pass ktlint validation!"
    rm -f "$TEMP_FILE_LIST"
    exit 0
else
    echo "❌ ktlint check failed!"
    echo ""
    echo "Please fix the following code style issues:"
    echo "==========================================="

    # Show the actual errors by running without quiet flag
    ./gradlew ktlintCheck -Pktlint.fileList="$TEMP_FILE_LIST" | grep -E "(ERROR|✖)" | head -10

    echo ""
    echo "You can:"
    echo "1. Fix the issues manually, or"
    echo "2. Run './gradlew ktlintFormat' to auto-format, then review changes"
    echo "3. Add the fixed files to staging with 'git add <file>'"
    echo ""
    echo "Commit aborted due to code style violations."

    rm -f "$TEMP_FILE_LIST"
    exit 1
fi

exit 0